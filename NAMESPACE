useDynLib('BART', .registration=TRUE)
##exportPattern("^[[:alpha:]]+")
##export(dpmbart, dpmwbart)
export(wbart, mc.wbart, pwbart, mc.wbart.gse, mc.pwbart)
export(pbart, mc.pbart)
export(gbart, mc.gbart)
export(abart, mc.abart)
##export(spbart, mc.spbart)
export(stratrs, rs.pbart)
export(lbart, mc.lbart, mbart, mc.mbart)
export(surv.pre.bart, surv.bart, surv.pwbart, mc.surv.bart, mc.surv.pwbart)
export(recur.pre.bart, recur.bart, recur.pwbart, mc.recur.bart, mc.recur.pwbart)
export(crisk.pre.bart, crisk.bart, mc.crisk.bart, mc.crisk.pwbart)
export(crisk2.bart, mc.crisk2.bart, mc.crisk2.pwbart)
export(mc.cores.openmp)
export(rtnorm, draw_lambda_i)
export(gewekediag, spectrum0ar)
##export(bartModelMatrix, class.ind)
export(bartModelMatrix)
export(srstepwise)
importFrom(nnet, class.ind)
importFrom(Rcpp, evalCpp)
importFrom(parallel, detectCores)
importFrom(stats, ar, cor, lm, predict, pnorm, qnorm, qchisq, plogis, qlogis, quantile, residuals, runif, sd, coef, vcov)
importFrom(survival, survfit, Surv, survreg)
importFrom(tools, psnice)
S3method(predict, wbart)
S3method(predict, pbart)
S3method(predict, survbart)
S3method(predict, recurbart)
S3method(predict, criskbart)
S3method(predict, crisk2bart)
S3method(predict, lbart)
S3method(predict, mbart)
export(predict.wbart, predict.pbart, predict.lbart, predict.mbart)
export(predict.survbart, predict.recurbart)
export(predict.criskbart, predict.crisk2bart)
##S3method(predict, gbart)
##export(predict.gbart)
